<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE unions SYSTEM "dtd/unions.dtd">

<unions>
  <!-- typedef -->
  <typedef name="literal">
    <keyword name="null" />
    <class name="NumericLiteral" />
    <class name="StringLiteral" />
  </typedef>

  <typedef name="declaration">
    <class name="ModuleDeclaration" />
    <class name="InterfaceDeclaration" />
    <class name="ClassDeclaration" />
    <class name="EnumDeclaration" />
    <class name="ExportDeclaration" />
  </typedef>
  <!-- /typedef -->

  <!-- common -->
  <union type="IGeneralType">
    <keyword name="undefined" />
    <keyword name="any" />
    <keyword name="never" />
    <keyword name="void" />
    <keyword name="string" />
    <keyword name="number" />
    <keyword name="boolean" />
    <class name="LiteralType" />
    <class name="UnionType" />
    <class name="IntersectionType" />
    <class name="ParenthesizedType" />
    <class name="TypeReference" />
    <class name="TypeLiteral" />
  </union>

  <union type="IDeclaration">
    <type name="declaration" />
  </union>

  <union type="IIdentifier">
    <class name="Identifier"/>
    <class name="QualifiedName"/>
  </union>

  <!-- statement -->
  <union type="IStatement">
    <type name="declaration" />
    <interface name="IDeclaration" />
    <class name="Block" />
    <class name="VariableStatement" />
    <class name="ReturnStatement" />
    <class name="RawText" />
  </union>

  <union type="IExpression">
    <type name="literal" />
    <class name="CallExpression" />
  </union>

  <!-- basic type -->
  <union type="LiteralType.ILiteral">
    <type name="literal" />
  </union>

  <!-- namespace -->
  <union type="ModuleDeclaration.IModifier">
    <keyword name="declare" />
    <keyword name="export" />
  </union>

  <!-- variable -->
  <union type="VariableDeclaration.IInitializer">
    <type name="literal" />
  </union>

  <!-- getter -->
  <union type="GetAccessor.IModifier">
    <keyword name="public" />
    <keyword name="protected" />
    <keyword name="private" />
  </union>

  <!-- setter -->
  <union type="SetAccessor.IModifier">
    <keyword name="public" />
    <keyword name="protected" />
    <keyword name="private" />
  </union>

  <!-- interface -->
  <union type="InterfaceDeclaration.IModifier">
    <keyword name="export" />
  </union>
  <union type="InterfaceDeclaration.IMember">
    <class name="PropertySignature" />
    <class name="GetAccessor" />
    <class name="SetAccessor" />
  </union>

  <!-- class -->
  <union type="ClassDeclaration.IModifier">
    <keyword name="export" />
  </union>
  <union type="ClassDeclaration.IMember">
    <class name="Constructor" />
    <class name="MethodDeclaration" />
  </union>

  <union type="MethodDeclaration.IModifier">
    <keyword name="public" />
    <keyword name="protected" />
    <keyword name="private" />
    <keyword name="async" />
  </union>

  <!-- type -->
  <union type="TypeLiteral.IMember">
    <class name="PropertySignature" />
    <class name="IndexSignature" />
  </union>

  <!-- enum -->
  <union type="EnumDeclaration.IModifier">
    <keyword name="export" />
  </union>
  <union type="EnumMember.IInitializer">
    <type name="literal" />
  </union>

</unions>
