using static TypeSharp.Test.ControllerTests;

namespace TypeSharp.Test;

public class ModelTests
{
    private readonly TypeScriptGenerator _generator = new(new()
    {
        CamelCase = true,
        DetectionMode = DetectionMode.None,
        ModuleCode = ModuleCode.Nested,
        Resolvers =
        [
        ],
    })
    {
        typeof(LoginRequest<>)
    };

    public class LoginRequest<T>
    {
        public HttpStatus Status { get; set; }
        public T? Id { get; set; }
        public int Token { get; set; }
        public int? Tag { get; set; }
    }

    [Fact]
    public void Test()
    {
        var code = _generator.GetCode();
        var expected = """
/* Generated by TypeSharpV3 dev-version */
export namespace TypeSharp.Test.ControllerTests {
  export enum HttpStatus {
    None = 0,
    OK = 200,
    NotFound = 404
  }
}
export namespace TypeSharp.Test.ModelTests {
  export interface LoginRequest<T> {
    status: TypeSharp.Test.ControllerTests.HttpStatus;
    id?: T;
    token: number;
    tag?: number;
  }
}
""";
        Assert.Equal(expected, code);
    }
}
